name: Python Wheels

on:
  push:
    tags-ignore:
      - '**'
    branches:
      - '**'
  release:
    types: ['released', 'prereleased']

jobs:
  build-linux:
    runs-on: ubuntu-latest
    container: 
      image: ghcr.io/tttapa/alpaqa-python-build:py${{ matrix.python-version }}
      options: --user root
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
    steps:
    - run: lscpu
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Install Python build tools
      run: |
        python3 -m pip install build auditwheel patchelf
    - name: Build
      run: |
        python3 -m build .
        auditwheel repair --plat manylinux_2_17_$(uname -m) dist/*$(uname -m).whl
      env:
        CXXFLAGS: "-march=skylake -static-libstdc++ -static-libgcc"
        LDFLAGS: "-static-libstdc++ -static-libgcc"
        CFLAGS: "-march=skylake -static-libgcc"
    - name: Upload Wheel
      uses: actions/upload-artifact@v2
      with:
        name: quala-whl-${{ matrix.python-version }}-amd64
        path: wheelhouse/quala-*.whl
    - name: Upload source
      uses: actions/upload-artifact@v2
      with:
        name: quala-src-${{ matrix.python-version }}
        path: dist/quala-*.tar.gz

  test-linux:
    needs: [build-linux]
    runs-on: ubuntu-latest
    container: python:${{ matrix.python-version }}-bullseye
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/download-artifact@v2
      with:
        name: quala-whl-${{ matrix.python-version }}-amd64
        path: dist
    - name: Test
      run: |
          python3 -m pip install pytest cmake ninja
          python3 -m pip install dist/quala-*.whl
          python3 -m pip install 'quala[tests]' -f dist
          pytest -rP

  build-windows:
    runs-on: windows-2022
    strategy:
      matrix:
        include:
          - python-version: '3.7'
            full-python-version: '3.7'
          - python-version: '3.8'
            full-python-version: '3.8'
          - python-version: '3.9'
            full-python-version: '3.9'
          - python-version: '3.10'
            full-python-version: '3.10'
          - python-version: '3.11'
            full-python-version: '3.11-dev'
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/setup-python@v2
      name: Install Python
      id: python
      with: 
        python-version: ${{ matrix.full-python-version }}
    - name: Cache Virtual Environment
      id: cache-venv
      uses: actions/cache@v2
      with:
        path: py-venv
        key: ${{ runner.os }}-${{ steps.python.outputs.python-version }}-${{ hashFiles('scripts/install-eigen.ps1') }}
    - name: Install Python Dependencies 
      if: steps.cache-venv.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        python -m venv py-venv
        ./py-venv/Scripts/Activate.ps1
        ./scripts/install-eigen.ps1
        python -m pip install build
      env:
        CXXFLAGS: "/bigobj"
        CFLAGS: "/bigobj"
    - name: Build
      shell: powershell
      run: |
        ./py-venv/Scripts/Activate.ps1
        $env:CMAKE_PREFIX_PATH = $env:VIRTUAL_ENV + ";" + $env:CMAKE_PREFIX_PATH
        python -m build . --wheel
      env:
        PYTHONUTF8: 1
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: quala-whl-${{ matrix.python-version }}-win
        path: dist/quala-*.whl

  test-windows:
    needs: [build-windows]
    runs-on: windows-2022
    strategy:
      matrix:
        include:
          - python-version: '3.7'
            full-python-version: '3.7'
          - python-version: '3.8'
            full-python-version: '3.8'
          - python-version: '3.9'
            full-python-version: '3.9'
          - python-version: '3.10'
            full-python-version: '3.10'
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/setup-python@v2
      name: Install Python
      with: 
        python-version: ${{ matrix.full-python-version }}
    - uses: actions/download-artifact@v2
      with:
        name: quala-whl-${{ matrix.python-version }}-win
        path: dist
    - name: Test
      shell: powershell
      run: |
        python -m pip install pytest cmake ninja
        $whl = Resolve-Path dist/quala-*.whl
        python -m pip install $whl
        python -m pip install 'quala[tests]' -f dist
        pytest -rP

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        include:
          - python-version: '3.7'
            full-python-version: '3.7'
          - python-version: '3.8'
            full-python-version: '3.8'
          - python-version: '3.9'
            full-python-version: '3.9'
          - python-version: '3.10'
            full-python-version: '3.10'
          - python-version: '3.11'
            full-python-version: '3.11-dev'
    steps:
    - run: sysctl -a | grep machdep.cpu.brand_string
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/setup-python@v2
      id: python
      name: Install Python
      with: 
        python-version: ${{ matrix.full-python-version }}
    - name: Cache Virtual Environment
      id: cache-venv
      uses: actions/cache@v2
      with:
        path: py-venv
        key: ${{ runner.os }}-${{ steps.python.outputs.python-version }}-${{ hashFiles('scripts/install-eigen.sh') }}-skylake
    - name: Install Python Dependencies 
      if: steps.cache-venv.outputs.cache-hit != 'true'
      run: |
        python -m venv py-venv
        source ./py-venv/bin/activate
        python -m pip install build ninja
        CC="$(brew --prefix llvm@14)/bin/clang" \
        CXX="$(brew --prefix llvm@14)/bin/clang++" \
          ./scripts/install-eigen.sh
      env:
        CXXFLAGS: "-march=sandybridge"
        CFLAGS: "-march=sandybridge"
    - name: Build
      run: |
        source ./py-venv/bin/activate
        CMAKE_PREFIX_PATH="$VIRTUAL_ENV:$CMAKE_PREFIX_PATH" \
        CC="$(brew --prefix llvm@14)/bin/clang" \
        CXX="$(brew --prefix llvm@14)/bin/clang++" \
            python -m build . --wheel
      env:
        CXXFLAGS: "-march=sandybridge"
        CFLAGS: "-march=sandybridge"
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: quala-whl-${{ matrix.python-version }}-mac
        path: dist/quala-*.whl

  test-macos:
    needs: [build-macos]
    runs-on: macos-latest
    strategy:
      matrix:
        include:
          - python-version: '3.7'
            full-python-version: '3.7'
          - python-version: '3.8'
            full-python-version: '3.8'
          - python-version: '3.9'
            full-python-version: '3.9'
          - python-version: '3.10'
            full-python-version: '3.10'
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v2
      name: Install Python
      with: 
        python-version: ${{ matrix.full-python-version }}
    - uses: actions/download-artifact@v2
      with:
        name: quala-whl-${{ matrix.python-version }}-mac
        path: dist
    - name: Test
      run: |
        python -m pip install pytest cmake ninja
        python -m pip install dist/quala-*.whl
        python -m pip install 'quala[tests]' -f dist
        pytest -rP

  release:
    if: ${{ github.event.action == 'released' || github.event.action == 'prereleased' }}
    needs: [test-linux, test-windows, test-macos]
    runs-on: ubuntu-latest
    container: python:${{ matrix.full-python-version }}-bullseye
    strategy:
      matrix:
        include:
          - python-version: '3.7'
            full-python-version: '3.7'
          - python-version: '3.8'
            full-python-version: '3.8'
          - python-version: '3.9'
            full-python-version: '3.9'
          - python-version: '3.10'
            full-python-version: '3.10'
          - python-version: '3.11'
            full-python-version: '3.11-rc'
    steps:
    - uses: actions/checkout@v1
    - uses: actions/download-artifact@v2
      with:
        name: quala-whl-${{ matrix.python-version }}-amd64
        path: dist
    - uses: actions/download-artifact@v2
      with:
        name: quala-whl-${{ matrix.python-version }}-win
        path: dist
    - uses: actions/download-artifact@v2
      with:
        name: quala-whl-${{ matrix.python-version }}-mac
        path: dist
    - name: Install quala
      run: python -m pip install --no-deps --no-index --find-links=dist quala
    - name: Check quala version
      run: |
        [ "${{ github.event.release.tag_name }}" == "$(python -c 'import quala as a; print(a.__version__)')" ]
      shell: bash
    - name: Install Twine
      run: python -m pip install twine
    - name: Upload Wheel to PyPI
      run: python -m twine upload dist/quala-*.whl
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PyPI }}
    - uses: actions/download-artifact@v2
      if: ${{ matrix.python-version == '3.10' }}
      with:
        name: quala-src-${{ matrix.python-version }}
        path: dist
    - name: Upload source to PyPI
      if: ${{ matrix.python-version == '3.10' }}
      run: python -m twine upload dist/quala-*.tar.gz
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PyPI }}
